/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package duantotnghiep.View.ThongKe;

import duantotnghiep.DAO.CRUD;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import org.knowm.xchart.CategoryChart;
import org.knowm.xchart.CategoryChartBuilder;
import org.knowm.xchart.XChartPanel;
import org.knowm.xchart.style.Styler;

/**
 *
 * @author duck
 */
public class TyLeTraDungHanvaMuon extends javax.swing.JPanel {

    /**
     * Creates new form TyLeTraSachDungHanVaTre
     */

    public TyLeTraDungHanvaMuon() {
        initComponents();
        setLayout(null);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setPreferredSize(screenSize);
        setSize(screenSize);

        ArrayList<String> trangThai = new ArrayList<>();
        ArrayList<Double> tyLe = new ArrayList<>();
        fillChartData(trangThai, tyLe);

        CategoryChart chart = new CategoryChartBuilder()
                .width(600)
                .height(350)
                .title("Tỉ lệ sách trả đúng hạn và trễ hạn")
                .yAxisTitle("Tỉ lệ (%)")
                .xAxisTitle("Trạng thái trả sách")
                .build();

        chart.getStyler().setYAxisTickMarkSpacingHint(50);
        chart.getStyler().setLegendPosition(Styler.LegendPosition.InsideNW);
        chart.getStyler().setXAxisLabelRotation(0);
        chart.getStyler().setLabelsVisible(true);
        chart.getStyler().setYAxisDecimalPattern("0'%'");
        chart.getStyler().setYAxisMin(0.0);
        chart.getStyler().setYAxisMax(100.0);

// Thêm dữ liệu vào biểu đồ
        chart.addSeries("Tỉ lệ", trangThai, tyLe);

// Hiển thị biểu đồ trong JPanel
        XChartPanel<CategoryChart> chartPanel = new XChartPanel<>(chart);
        chartPanel.setBounds(0, 0, 1400, 640); // Xác định vị trí và kích thước cụ thể
        add(chartPanel);
    }

    private void fillChartData(ArrayList<String> trangThai, ArrayList<Double> tyLe) {
    String sql = "WITH TraSach AS (\n"
               + "    SELECT \n"
               + "        ctm.ChiTietMuon_ID, \n"
               + "        ctm.NgayMuon, \n"
               + "        DATEADD(DAY, ctm.SoNgayMuon, ctm.NgayMuon) AS NgayHenTra, \n"
               + "        pt.NgayTra AS NgayTraThucTe \n"
               + "    FROM ChiTietMuon ctm \n"
               + "    LEFT JOIN PhieuTra pt ON ctm.ChiTietMuon_ID = pt.ChiTietMuon_ID \n"
               + ") \n"
               + "SELECT \n"
               + "    ROUND(100.0 * SUM(CASE WHEN NgayTraThucTe <= NgayHenTra THEN 1 ELSE 0 END) / COUNT(*), 2) AS TiLe_DungHan, \n"
               + "    ROUND(100.0 * SUM(CASE WHEN NgayTraThucTe > NgayHenTra THEN 1 ELSE 0 END) / COUNT(*), 2) AS TiLe_TreHan \n"
               + "FROM TraSach \n"
               + "WHERE NgayTraThucTe IS NOT NULL";

    try (Connection con = DriverManager.getConnection(CRUD.connectionUrl); 
         PreparedStatement stm = con.prepareStatement(sql);
         ResultSet rs = stm.executeQuery()) {

        trangThai.clear();
        tyLe.clear();

        if (rs.next()) {
            double tiLeDungHan = rs.getDouble("TiLe_DungHan");
            double tiLeTreHan = rs.getDouble("TiLe_TreHan");

            // Đảm bảo tổng tỉ lệ là 100%
            double tong = tiLeDungHan + tiLeTreHan;
            if (tong != 100.0) {
                tiLeDungHan = (tiLeDungHan / tong) * 100;
                tiLeTreHan = (tiLeTreHan / tong) * 100;
            }

            trangThai.add("Đúng hạn");
            tyLe.add(tiLeDungHan);
            trangThai.add("Trễ hạn");
            tyLe.add(tiLeTreHan);
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, 
            "Lỗi khi tải dữ liệu:\n" + e.getMessage(), 
            "Lỗi", 
            JOptionPane.ERROR_MESSAGE);
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
