/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package duantotnghiep.VIEW.ThongKe;

import duantotnghiep.DAO.CRUD;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JFrame;
import org.knowm.xchart.CategoryChart;
import org.knowm.xchart.CategoryChartBuilder;
import org.knowm.xchart.XChartPanel;
import org.knowm.xchart.style.Styler;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author duck
 */
public class ThongKeSoLieuSachMuonTra extends javax.swing.JFrame {

    /**
     * Creates new form ThongKeSoLieuSachMuonTra
     */
    public ThongKeSoLieuSachMuonTra() {
        initComponents();
        setTitle("Thống kê số sách mượn và trả");
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setPreferredSize(screenSize);
        setSize(screenSize);

        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        // Danh sách dữ liệu từ SQL
        ArrayList<String> thangNam = new ArrayList<>();
        ArrayList<Integer> soSachMuon = new ArrayList<>();
        ArrayList<Integer> soSachTra = new ArrayList<>();

        // Gọi hàm lấy dữ liệu
        fillChartData(thangNam, soSachMuon, soSachTra);

        // Tạo biểu đồ
        CategoryChart chart = new CategoryChartBuilder()
                .width(1200)
                .height(800)
                .title("Thống kê số sách mượn và trả")
                .xAxisTitle("Tháng/Năm")
                .yAxisTitle("Số lượng sách")
                .build();

        // Tùy chỉnh biểu đồ
        chart.getStyler().setLegendPosition(Styler.LegendPosition.OutsideS);
        chart.getStyler().setLabelsVisible(true);
        chart.getStyler().setYAxisDecimalPattern("#,###");

        // Thêm dữ liệu vào biểu đồ
        chart.addSeries("Sách mượn", thangNam, soSachMuon);
        chart.addSeries("Sách trả", thangNam, soSachTra);

        // Thêm vào giao diện
        XChartPanel<CategoryChart> chartPanel = new XChartPanel<>(chart);
        setContentPane(chartPanel);
    }

    private void fillChartData(ArrayList<String> thangNam, ArrayList<Integer> soSachMuon, ArrayList<Integer> soSachTra) {
    String sql = "WITH Muon AS ("
               + "    SELECT "
               + "        YEAR(NgayMuon) AS Nam, "
               + "        MONTH(NgayMuon) AS Thang, "
               + "        COUNT(*) AS SoMuon "
               + "    FROM ChiTietMuon "
               + "    GROUP BY YEAR(NgayMuon), MONTH(NgayMuon) "
               + "), Tra AS ("
               + "    SELECT "
               + "        YEAR(NgayTra) AS Nam, "
               + "        MONTH(NgayTra) AS Thang, "
               + "        COUNT(*) AS SoTra "
               + "    FROM PhieuTra "
               + "    GROUP BY YEAR(NgayTra), MONTH(NgayTra) "
               + ") "
               + "SELECT "
               + "    COALESCE(m.Thang, t.Thang) AS Thang, "
               + "    COALESCE(m.Nam, t.Nam) AS Nam, "
               + "    COALESCE(SoMuon, 0) AS SoMuon, "
               + "    COALESCE(SoTra, 0) AS SoTra "
               + "FROM Muon m "
               + "FULL OUTER JOIN Tra t ON m.Thang = t.Thang AND m.Nam = t.Nam "
               + "ORDER BY Nam, Thang";

    try (Connection con = DriverManager.getConnection(CRUD.connectionUrl); 
         PreparedStatement stm = con.prepareStatement(sql);
         ResultSet rs = stm.executeQuery()) {

        while (rs.next()) {
            String label = rs.getInt("Thang") + "/" + rs.getInt("Nam");
            thangNam.add(label);
            soSachMuon.add(rs.getInt("SoMuon"));
            soSachTra.add(rs.getInt("SoTra"));
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi kết nối CSDL!", "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongKeSoLieuSachMuonTra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongKeSoLieuSachMuonTra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongKeSoLieuSachMuonTra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKeSoLieuSachMuonTra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongKeSoLieuSachMuonTra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
